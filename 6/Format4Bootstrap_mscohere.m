%% Format4Bootstrap_mscohere
% [f,M_ILDH,M_ILVH,M_ILPL,M_DHVH,M_DHPL,M_VHPL,F_ILDH,F_ILVH,F_ILPL,F_DHVH,F_DHPL,F_VHPL] = Format4Bootstrap_mscohere(subjs,root_drIn,M_IL,M_DH,M_VH,M_PL,F_IL,F_DH,F_VH,F_PL)
% 
%   uses function mscohere
% 
%  Familiar arena (BL) data, only epochs of movement between 5-15 cm/s
%   MALE DATA:
%       M{1,1} = data(ntrials,ntimestamps)  Male subject 1
%       M{2,1} = data(27,XXXX)  Male subject 2 (example: 27 trials, Coherence data with length(f)=XXXX)
% 
%   FEMALE DATA:    
%       Same as above, but 2nd dimension of cell array indexes estrous stage:
%         F{:,1}=Diestrus (D)
%         F{:,2}=Proestrus (P)
%         F{:,3}=Estrus (E)
%         F{:,4}=Metestrus (M)  **Included for MvF comparisons, Ignored for female hormone comparisons**
% 
%   Fetches data generated by:
%       Format4Bootstrap_LFP.m            'LFP-BL-5to15_boot.mat'
% 
%   Called by:
%       Thesis6_Format4Bootstrap_5to15.m
% 
% Lengthy runtime (all trials concat.), ~5-10min/subj
% 
% KJS init: 2020-01-14
% KJS edit 2020-02-27: Format as function

function [f,M_ILDH,M_ILVH,M_ILPL,M_DHVH,M_DHPL,M_VHPL,F_ILDH,F_ILVH,F_ILPL,F_DHVH,F_DHPL,F_VHPL] ...
    = Format4Bootstrap_mscohere(subjs,root_drIn,M_IL,M_DH,M_VH,M_PL,F_IL,F_DH,F_VH,F_PL)
%% Setup

% Subject ID listing: Separate the sexes. A*=male  E*=female
Msubjs = subjs(contains(subjs,'A')); % males
Fsubjs = subjs(contains(subjs,'E')); % females

% mscohere parameters
Fs = 2000; %sampling frequency (Hz)
nfft=Fs*2;
window = hann(nfft);
noverlap = nfft/2;
F = 0.5:0.5:100; %frequency vector [0.5 - 100] Hz

%% Shape data: Coherence, BL arena, 5-15 cm/s velocity
%% Males

% Preallocate output space
M_ILDH = cell(length(Msubjs),1);  % mPFCil-dHPC
M_ILVH = cell(length(Msubjs),1);  % mPFCil-vHPC
M_ILPL = cell(length(Msubjs),1);  % mPFCil-mPFCpl
M_DHVH = cell(length(Msubjs),1);  % dHPC-vHPC
M_DHPL = cell(length(Msubjs),1);  % dHPC-mPFCpl
M_VHPL = cell(length(Msubjs),1);  % vHPC-mPFCpl

for si = 1:length(Msubjs) %loop thru male subjects
    tic;
    subjID = Msubjs{si}; %subject name
    fprintf('Processing mscohere for %s...\n',subjID)
    [M_ILDH{si,1},f] = mscohere(cell2mat(M_IL{si,1}(:)),cell2mat(M_DH{si,1}(:)),window,noverlap,F,Fs);
    disp('.')
    [M_ILVH{si,1}] = mscohere(cell2mat(M_IL{si,1}(:)),cell2mat(M_VH{si,1}(:)),window,noverlap,F,Fs);
    disp('..')
    [M_ILPL{si,1}] = mscohere(cell2mat(M_IL{si,1}(:)),cell2mat(M_PL{si,1}(:)),window,noverlap,F,Fs);
    disp('...')
    [M_DHVH{si,1}] = mscohere(cell2mat(M_DH{si,1}(:)),cell2mat(M_VH{si,1}(:)),window,noverlap,F,Fs);
    disp('....')
    [M_DHPL{si,1}] = mscohere(cell2mat(M_DH{si,1}(:)),cell2mat(M_PL{si,1}(:)),window,noverlap,F,Fs);
    disp('.....')
    [M_VHPL{si,1}] = mscohere(cell2mat(M_VH{si,1}(:)),cell2mat(M_PL{si,1}(:)),window,noverlap,F,Fs);
    toc
end %Msubjs
clear si subjID
clear M_IL M_DH M_VH M_PL

% Save Male data alone
fn = 'Male_mscohere-BL-5to15_boot.mat';
save([root_drIn '5to15' filesep fn],'f','M_*','nfft','noverlap','window','Fs')
disp('Male data saved!')
clear fn 


%% Females (with 4 hormone states)

% Preallocate output space
F_ILDH = cell(length(Fsubjs),1);  % mPFCil-dHPC
F_ILVH = cell(length(Fsubjs),1);  % mPFCil-vHPC
F_ILPL = cell(length(Fsubjs),1);  % mPFCil-mPFCpl
F_DHVH = cell(length(Fsubjs),1);  % dHPC-vHPC
F_DHPL = cell(length(Fsubjs),1);  % dHPC-mPFCpl
F_VHPL = cell(length(Fsubjs),1);  % vHPC-mPFCpl

% For each female subject, concatenate all hormone states
for si = 1:length(Fsubjs)
    F_IL{si,1} = [F_IL{si,1}; F_IL{si,2}; F_IL{si,3}; F_IL{si,4}];
    F_DH{si,1} = [F_DH{si,1}; F_DH{si,2}; F_DH{si,3}; F_DH{si,4}];
    F_VH{si,1} = [F_VH{si,1}; F_VH{si,2}; F_VH{si,3}; F_VH{si,4}];
    F_PL{si,1} = [F_PL{si,1}; F_PL{si,2}; F_PL{si,3}; F_PL{si,4}];
end
F_IL(:,2:4)=[];
F_DH(:,2:4)=[];
F_VH(:,2:4)=[];
F_PL(:,2:4)=[];
clear si


for si = 1:length(Fsubjs)
    tic;
    fprintf('Processing mscohere for %s...\n',Fsubjs{si})
    [F_ILDH{si,1}] = mscohere(cell2mat(F_IL{si,1}(:)),cell2mat(F_DH{si,1}(:)),window,noverlap,F,Fs);
    disp('.')
    [F_ILVH{si,1}] = mscohere(cell2mat(F_IL{si,1}(:)),cell2mat(F_VH{si,1}(:)),window,noverlap,F,Fs);
    disp('..')
    [F_ILPL{si,1}] = mscohere(cell2mat(F_IL{si,1}(:)),cell2mat(F_PL{si,1}(:)),window,noverlap,F,Fs);
    disp('...')
    [F_DHVH{si,1}] = mscohere(cell2mat(F_DH{si,1}(:)),cell2mat(F_VH{si,1}(:)),window,noverlap,F,Fs);
    disp('....')
    [F_DHPL{si,1}] = mscohere(cell2mat(F_DH{si,1}(:)),cell2mat(F_PL{si,1}(:)),window,noverlap,F,Fs);
    disp('.....')
    [F_VHPL{si,1}] = mscohere(cell2mat(F_VH{si,1}(:)),cell2mat(F_PL{si,1}(:)),window,noverlap,F,Fs);
    toc
end 


end %function


%% extra script not used here. Ignore.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%     % ALT: MALES/ Loop thru trials
%     for ti = 1:size(medidx,2) 
%         fprintf('Trial %i of %i\n',ti,size(medidx,2))
%         tic;
%         if ti==1 %trial 1, also output 'f' (frequency vector)
%             [M_ILDH{si,1}(ti,:),f] = mscohere(medIL(medidx{1,ti}(:),ti),medDHIP(medidx{1,ti}(:),ti),window,noverlap,F,Fs);
%         else %not trial 1
%             [M_ILDH{si,1}(ti,:)] = mscohere(medIL(medidx{1,ti}(:),ti),medDHIP(medidx{1,ti}(:),ti),window,noverlap,F,Fs);
%         end %trial check
%         [M_ILVH{si,1}(ti,:)] = mscohere(medIL(medidx{1,ti}(:),ti),medVHIP(medidx{1,ti}(:),ti),window,noverlap,F,Fs);
%         [M_ILPL{si,1}(ti,:)] = mscohere(medIL(medidx{1,ti}(:),ti),medPL(medidx{1,ti}(:),ti),window,noverlap,F,Fs);
%         [M_DHVH{si,1}(ti,:)] = mscohere(medDHIP(medidx{1,ti}(:),ti),medVHIP(medidx{1,ti}(:),ti),window,noverlap,F,Fs);
%         [M_DHPL{si,1}(ti,:)] = mscohere(medDHIP(medidx{1,ti}(:),ti),medPL(medidx{1,ti}(:),ti),window,noverlap,F,Fs);
%         [M_VHPL{si,1}(ti,:)] = mscohere(medVHIP(medidx{1,ti}(:),ti),medPL(medidx{1,ti}(:),ti),window,noverlap,F,Fs);
%         toc    
%     end %trials. these loops take ~12 sec/ea
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%     % Load data and time indices for 5-15 cm/s movement, all trials
%     fn = [subjID '_ReducedDataPerSpeed.mat']; % file name to load
%     load([root_drIn subjID filesep fn],'medidx','medIL','medPL','medDHIP','medVHIP','*list')
%     clear fn

%     % Index trials by hormone state
%     if exist('BLlist','var')
%         list = BLlist; clear BLlist;
%     else %Rxlist
%         list = Rxlist; clear Rxlist;
%     end
%     Didx = contains(list,'_D');
%     Pidx = contains(list,'_P');
%     Eidx = contains(list,'_E');
%     if any(contains(list,'M'))
%         Midx = contains(list,'_M');
%     else
%         Midx = false(length(list),1);
%     end
%     idx = double([Didx Pidx Eidx Midx]);
%     clear Didx Pidx Eidx Midx    
% 
% for si = 1:length(Fsubjs)
%     tic;
%     fprintf('Processing mscohere for %s...\n',Fsubjs{si})
%      for hidx = 1:4 %loop hormone states
%         switch hidx
%             case 1; hs='Diestrus';
%             case 2; hs='Proestrus';
%             case 3; hs='Estrus';
%             case 4; hs='Metestrus';
%         end
%         for ri = 1:length(F_IL{si,hidx}) %loop trials
%             fprintf('%s trial %i of %i\n',hs,ri,length(F_IL{si,hidx}))
%             if si==1 && ri==1
%                 [F_ILDH{si,hidx}{ri},~,~,~,~,f] = coherencyc(F_IL{si,hidx}{ri,1}',F_DH{si,hidx}{ri,1}',params);
%             else
%                 [F_ILDH{si,hidx}{ri}] = coherencyc(F_IL{si,hidx}{ri,1}',F_DH{si,hidx}{ri,1}',params); 
%             end
%             disp('.')
%             [F_ILVH{si,hidx}{ri}] = coherencyc(F_IL{si,hidx}{ri,1}',F_VH{si,hidx}{ri,1}',params);
%             disp('..')
%             [F_ILPL{si,hidx}{ri}] = coherencyc(F_IL{si,hidx}{ri,1}',F_PL{si,hidx}{ri,1}',params);
%             disp('...')
%             [F_DHVH{si,hidx}{ri}] = coherencyc(F_DH{si,hidx}{ri,1}',F_VH{si,hidx}{ri,1}',params);
%             disp('....')
%             [F_DHPL{si,hidx}{ri}] = coherencyc(F_DH{si,hidx}{ri,1}',F_PL{si,hidx}{ri,1}',params);
%             disp('.....')
%             [F_VHPL{si,hidx}{ri}] = coherencyc(F_VH{si,hidx}{ri,1}',F_PL{si,hidx}{ri,1}',params);
%         end %trials
%         clear hs ri
%     end %hormones
%     toc
%     clear hidx
% end 
% clear si subjID F_IL F_DH F_VH F_PL
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% % Save female data alone
% fn = 'Female_mscohere-BL-5to15_boot.mat';
% save([root_drIn '5to15' filesep fn],'f','F_*','nfft','noverlap','window','Fs')
% disp('Female data saved!')
% clear fn
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%