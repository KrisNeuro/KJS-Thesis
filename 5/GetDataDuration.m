%% GetDataDuration
% [slowTime,medTime,fastTime,pctslowtime,pctmedtime,pctfasttime] = GetDataDuration(subjs,root_drIn)
% 
% Calculate time durations spent in each movement linear velocity range in
% familiar arena trials.
% 
%   Called by: 
%       Thesis5_FilterByVelocity.m
% 
%   Fetches data generated by: 
%       Thesis5_FilterByVelocity.m
% 
% 
% KJS init: 2019-11-19
% KJS edit 2020-01-22: Added percent time spent moving in speed ranges
% KJS edit 2020-02-18: Modified to function format

function [slowTime,medTime,fastTime,pctslowtime,pctmedtime,pctfasttime] = GetDataDuration(subjs,root_drIn)

% SETUP
Fs = 2000; %sampling frequency of LFP data (Hz)
drIn = [root_drIn 'ReducedEEG\BL\']; % input directory

% Preallocate output space
slowTime = cell(size(subjs)); 
medTime = cell(size(subjs));
fastTime = cell(size(subjs));
pctslowtime = cell(size(subjs));
pctmedtime = cell(size(subjs));
pctfasttime = cell(size(subjs));

%% Calculate durations spent in each velocity range
for si = 1:length(subjs) %loop subjects
    disp(subjs{si})
    
    % Fetch velocity-filtered LFP data for one brain region, all speeds, all BL trials (dHPC reduced-channel LFP data)
    load([drIn subjs{si} filesep subjs{si} '_ReducedDataPerSpeed.mat'], 'slowDHIP','medDHIP','fastDHIP')
    
    % Fetch length of non-zero values for each velocity range
     % Dividing by Fs converts timestamps to seconds 
    for ii = 1:size(medDHIP,2) %#ok<*NODEF>  % Loop thru trials
        slowTime{si}(ii)= length(find(slowDHIP(:,ii)~=0))/Fs; %#ok<*IDISVAR>  
        medTime{si}(ii) = length(find(medDHIP(:,ii)~=0))/Fs;
        fastTime{si}(ii) = length(find(fastDHIP(:,ii)~=0))/Fs;
    end
    clear slowDHIP medDHIP fastDHIP ii
    
    %% Calculate percent of time spent moving in each speed range
     % Divide by 600 seconds (length of trial), *100 to convert to percent
    pctslowtime{1,si} = cell2mat(slowTime(1,si))/600*100;
    pctmedtime{1,si} = cell2mat(medTime(1,si))/600*100; 
    pctfasttime{1,si} = cell2mat(fastTime(1,si))/600*100;
    
end %subjects
clear si

end %function
