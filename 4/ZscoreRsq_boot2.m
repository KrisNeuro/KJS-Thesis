function [M_ILDH_z, M_ILVH_z, M_ILPL_z, M_DHVH_z, M_DHPL_z, M_VHPL_z, ...
    F_ILDH_z, F_ILVH_z, F_ILPL_z, F_DHVH_z, F_DHPL_z, F_VHPL_z,Z_all] = ...
    ZscoreRsq_boot2(M_ILDH, M_ILVH, M_ILPL, M_DHVH, M_DHPL, M_VHPL, ...
    F_ILDH, F_ILVH, F_ILPL, F_DHVH, F_DHPL, F_VHPL)
%%ZscoreRsq_boot2
% [M_ILDH_z, M_ILVH_z, M_ILPL_z, M_DHVH_z, M_DHPL_z, M_VHPL_z, ...
%     F_ILDH_z, F_ILVH_z, F_ILPL_z, F_DHVH_z, F_DHPL_z, F_VHPL_z,Z_all] = ...
%     ZscoreRsq_boot2(M_ILDH, M_ILVH, M_ILPL, M_DHVH, M_DHPL, M_VHPL, ...
%     F_ILDH, F_ILVH, F_ILPL, F_DHVH, F_DHPL, F_VHPL)
% 
% Z-scores Theta, Gamma, and Delta power correlation values (R^2 ), all
% movement velocities
% 
% Uses data generated by: BandPowerCrossCorr_AllVelocityBL.m --reshape---> *Format4Bootstrap_Rsq2.m *
% 
% example:
%       drIn = 'K:\Personal Folders\Kristin Schoepfer\Neuralynx\DATA\REVAMPED\dat\ReducedEEG\BL\';
%       load([drIn 'ThetaRsq-BL_boot.mat'])
% 
%   Called by: Thesis4_AnalyzeAllVelDat.m
% 
% KJS init: 2020-03-10
% 

%% Replace empty cells with NaNs

% Males
mblank = find(cellfun(@isempty,M_ILDH));
[M_ILDH{mblank}] = deal(NaN);
[M_ILVH{mblank}] = deal(NaN);
[M_ILPL{mblank}] = deal(NaN);
[M_DHVH{mblank}] = deal(NaN);
[M_DHPL{mblank}] = deal(NaN);
[M_VHPL{mblank}] = deal(NaN);
clear mblank

% Females
mblank = find(cellfun(@isempty,F_ILDH));
[F_ILDH{mblank}] = deal(NaN);
[F_ILVH{mblank}] = deal(NaN);
[F_ILPL{mblank}] = deal(NaN);
[F_DHVH{mblank}] = deal(NaN);
[F_DHPL{mblank}] = deal(NaN);
[F_VHPL{mblank}] = deal(NaN);
clear mblank

%% cell2mat conversion
M_ILDH = cell2mat(M_ILDH);
M_ILVH = cell2mat(M_ILVH);
M_ILPL = cell2mat(M_ILPL);
M_DHVH = cell2mat(M_DHVH);
M_DHPL = cell2mat(M_DHPL);
M_VHPL = cell2mat(M_VHPL);
F_ILDH = cell2mat(F_ILDH);
F_ILVH = cell2mat(F_ILVH);
F_ILPL = cell2mat(F_ILPL);
F_DHVH = cell2mat(F_DHVH);
F_DHPL = cell2mat(F_DHPL);
F_VHPL = cell2mat(F_VHPL);

%% Z-score per connection

% This function performs z-scoring across rows while excluding NaNs
zscor_xnan = @(x) bsxfun(@rdivide, bsxfun(@minus, x, mean(x,'omitnan')), std(x, 'omitnan'));

M_ILDH_z = zscor_xnan(M_ILDH);
M_ILVH_z = zscor_xnan(M_ILVH);
M_ILPL_z = zscor_xnan(M_ILPL);
M_DHVH_z = zscor_xnan(M_DHVH);
M_DHPL_z = zscor_xnan(M_DHPL);
M_VHPL_z = zscor_xnan(M_VHPL);
F_ILDH_z = zscor_xnan(F_ILDH);
F_ILVH_z = zscor_xnan(F_ILVH);
F_ILPL_z = zscor_xnan(F_ILPL);
F_DHVH_z = zscor_xnan(F_DHVH);
F_DHPL_z = zscor_xnan(F_DHPL);
F_VHPL_z = zscor_xnan(F_VHPL);
clear zscor_xnan

%% mat2cell conversion
M_ILDH_z 
a = mat2cell(M_ILDH_z,size(M_ILDH,1),size(M_ILDH,2))


isnan(M_ILDH_z)



% 
% %% Z-score everything together - within-connection
% [Z_all,mu_all,sigma_all] = zscore(alldat,0,1);
% [Z_all] = zscore(alldat,0,1);
% [Z_M] = zscore(Malldat,0,1);
% [Z_F] = zscore(Falldat,0,1);
% clear alldat
    
% %% Output Z-scores back into boostrap shape
% mz = Z_all(1:size(Malldat,1),:); %males - all connections
% fz = Z_all(size(Malldat,1)+1:end,:); %females - all connections
% 
% %% Males
% F_ILDH_z = mat2cell(mz(:,1),[length(F_ILDH{1}) length(F_ILDH{2}) length(F_ILDH{3}) length(F_ILDH{4})]);
% F_ILVH_z = mat2cell(mz(:,2),[length(F_ILVH{1}) length(F_ILVH{2}) length(F_ILVH{3}) length(F_ILVH{4})]);
% F_ILPL_z = mat2cell(mz(:,3),[length(F_ILPL{1}) length(F_ILPL{2}) length(F_ILPL{3}) length(F_ILPL{4})]);
% F_DHVH_z = mat2cell(mz(:,4),[length(F_DHVH{1}) length(F_DHVH{2}) length(F_DHVH{3}) length(F_DHVH{4})]);
% F_DHPL_z = mat2cell(mz(:,5),[length(F_DHPL{1}) length(F_DHPL{2}) length(F_DHPL{3}) length(F_DHPL{4})]);
% F_VHPL_z = mat2cell(mz(:,6),[length(F_VHPL{1}) length(F_VHPL{2}) length(F_VHPL{3}) length(F_VHPL{4})]);
% clear mz F_ILDH F_ILVH F_ILPL F_DHVH F_DHPL F_VHPL Malldat
% 
% %% Females
% F_ILDH_z = mat2cell(fz(:,1),[length(F_ILDH{1,1}) length(F_ILDH{2,1}) length(F_ILDH{3,1}) length(F_ILDH{4,1}) length(F_ILDH{5,1}), ...
%                             length(F_ILDH{1,2}) length(F_ILDH{2,2}) length(F_ILDH{3,2}) length(F_ILDH{4,2}) length(F_ILDH{5,2}),...
%                             length(F_ILDH{1,3}) length(F_ILDH{2,3}) length(F_ILDH{3,3}) length(F_ILDH{4,3}) length(F_ILDH{5,3}),...
%                             length(F_ILDH{1,4}) length(F_ILDH{2,4}) length(F_ILDH{3,4}) length(F_ILDH{4,4}) length(F_ILDH{5,4})]);
% F_ILVH_z = mat2cell(fz(:,2),[length(F_ILVH{1,1}) length(F_ILVH{2,1}) length(F_ILVH{3,1}) length(F_ILVH{4,1}) length(F_ILVH{5,1}), ...
%                             length(F_ILVH{1,2}) length(F_ILVH{2,2}) length(F_ILVH{3,2}) length(F_ILVH{4,2}) length(F_ILVH{5,2}),...
%                             length(F_ILVH{1,3}) length(F_ILVH{2,3}) length(F_ILVH{3,3}) length(F_ILVH{4,3}) length(F_ILVH{5,3}),...
%                             length(F_ILVH{1,4}) length(F_ILVH{2,4}) length(F_ILVH{3,4}) length(F_ILVH{4,4}) length(F_ILVH{5,4})]);
% F_ILPL_z = mat2cell(fz(:,3),[length(F_ILPL{1,1}) length(F_ILPL{2,1}) length(F_ILPL{3,1}) length(F_ILPL{4,1}) length(F_ILPL{5,1}), ...
%                             length(F_ILPL{1,2}) length(F_ILPL{2,2}) length(F_ILPL{3,2}) length(F_ILPL{4,2}) length(F_ILPL{5,2}),...
%                             length(F_ILPL{1,3}) length(F_ILPL{2,3}) length(F_ILPL{3,3}) length(F_ILPL{4,3}) length(F_ILPL{5,3}),...
%                             length(F_ILPL{1,4}) length(F_ILPL{2,4}) length(F_ILPL{3,4}) length(F_ILPL{4,4}) length(F_ILPL{5,4})]);
% F_DHVH_z = mat2cell(fz(:,4),[length(F_DHVH{1,1}) length(F_DHVH{2,1}) length(F_DHVH{3,1}) length(F_DHVH{4,1}) length(F_DHVH{5,1}), ...
%                             length(F_DHVH{1,2}) length(F_DHVH{2,2}) length(F_DHVH{3,2}) length(F_DHVH{4,2}) length(F_DHVH{5,2}),...
%                             length(F_DHVH{1,3}) length(F_DHVH{2,3}) length(F_DHVH{3,3}) length(F_DHVH{4,3}) length(F_DHVH{5,3}),...
%                             length(F_DHVH{1,4}) length(F_DHVH{2,4}) length(F_DHVH{3,4}) length(F_DHVH{4,4}) length(F_DHVH{5,4})]);
% F_DHPL_z = mat2cell(fz(:,5),[length(F_DHPL{1,1}) length(F_DHPL{2,1}) length(F_DHPL{3,1}) length(F_DHPL{4,1}) length(F_DHPL{5,1}), ...
%                             length(F_DHPL{1,2}) length(F_DHPL{2,2}) length(F_DHPL{3,2}) length(F_DHPL{4,2}) length(F_DHPL{5,2}),...
%                             length(F_DHPL{1,3}) length(F_DHPL{2,3}) length(F_DHPL{3,3}) length(F_DHPL{4,3}) length(F_DHPL{5,3}),...
%                             length(F_DHPL{1,4}) length(F_DHPL{2,4}) length(F_DHPL{3,4}) length(F_DHPL{4,4}) length(F_DHPL{5,4})]);
% F_VHPL_z = mat2cell(fz(:,6),[length(F_VHPL{1,1}) length(F_VHPL{2,1}) length(F_VHPL{3,1}) length(F_VHPL{4,1}) length(F_VHPL{5,1}), ...
%                             length(F_VHPL{1,2}) length(F_VHPL{2,2}) length(F_VHPL{3,2}) length(F_VHPL{4,2}) length(F_VHPL{5,2}),...
%                             length(F_VHPL{1,3}) length(F_VHPL{2,3}) length(F_VHPL{3,3}) length(F_VHPL{4,3}) length(F_VHPL{5,3}),...
%                             length(F_VHPL{1,4}) length(F_VHPL{2,4}) length(F_VHPL{3,4}) length(F_VHPL{4,4}) length(F_VHPL{5,4})]);
% % Reshape 
% F_ILDH_z = reshape(F_ILDH_z,size(F_ILDH));
% F_ILVH_z = reshape(F_ILVH_z,size(F_ILVH));
% F_ILPL_z = reshape(F_ILPL_z,size(F_ILPL));
% F_DHVH_z = reshape(F_DHVH_z,size(F_DHVH));
% F_DHPL_z = reshape(F_DHPL_z,size(F_DHPL));
% F_VHPL_z = reshape(F_VHPL_z,size(F_VHPL));
% 
% clear F_ILDH F_ILVH F_ILPL F_DHVH F_DHPL F_VHPL fz Falldat FDalldat FEalldat FMalldat FPalldat

end %function
