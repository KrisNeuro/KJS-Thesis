%% Thesis7_Analyze5to15BLDat_V3.m
% 
%   Steps:
%       1.0 Hierarchical bootstrap: Band power (BL,5-15cm/s)
%        1.1 MvF: Band Power 
%        1.2 Plot mean theta band joint-probability matrices: M vs F 
%        1.3 Plot mean gamma band joint-probability matrices: M vs F 
%        1.4 Plot mean delta band joint-probability matrices: M vs F 
%        1.5 Females/Hormones: Band Power
%        1.6 Plot mean theta band joint-probability matrices: Females/Hormones
%        1.7 Plot mean gamma band joint-probability matrices: Females/Hormones
%        1.8 Plot mean delta band joint-probability matrices: Females/Hormones
%       2.0 Hierarchical bootstrap: Theta phase lags (BL,mean dHPC power threshold)
%        2.1 MvF: Theta phase lags 
%        2.2 Plot mean theta phase lag joint-probability matrices: M vs F 
%        2.3 Females/Hormones: Theta phase lags
%        2.4 Plot mean theta phase lag joint-probability matrices: Females/Hormones
%       3.0 Hierarchical bootstrap: Theta, Gamma, Delta R^2
%        3.1 MvF: R^2
%        3.2 Plot mean R^2 joint-probability matrices: M vs F 
%        3.3 Females/Hormones: R^2
%        3.4 Plot mean R^2 joint-probability matrices: Females/Hormones
% 
%   Calls on functions:
%       - get_bootstrapped_sample.m
%       - get_direct_prob.m
%       - BootStat_MvF.m
%       - BootStat_FHorms.m
% 
%   Requires Communication Toolbox be installed in MATLAB.
% 
% KJS init: 2020-03-13 Going back to 1 nperm. Changes to plots, collecting bootstrapped samples

%% Setup
subjs = {'A201' 'A202' 'A301' 'A602' 'E105' 'E106' 'E107' 'E108' 'E201'}; % Subject ID listing. A*=male  E*=female 
nperms=1;
x = linspace(0,100); %unity line for joint-prob figures

% Set data directories
root_drIn = [uigetdir(pwd,'Select root input directory holding data: Reduced EEG, BL arena') filesep];
% root_drIn = 'K:\Personal Folders\Kristin Schoepfer\Neuralynx\DATA\REVAMPED\dat\ReducedEEG\BL\'; %data input
figdrOut = [uigetdir(pwd,'Select root figure output directory') filesep];
% figdrOut = 'K:\Personal Folders\Kristin Schoepfer\Neuralynx\DATA\REVAMPED\figs\'; %figure output directory 


%% 1.0 Hierarchical bootstrap: Band power
% Calls data: 'FreqBandPow-BL-5to15_boot.mat' 
% Generated by: Format4Bootstrap_BandPower2.m, called within Thesis6_*_5to15.m

brain_area = {'IL'; 'dHPC'; 'vHPC'; 'PL'};

% Load band power data 
if ~exist('M_DH_theta','var') || ~exist('F_DH_theta','var')
    disp('Loading band power data...')
    fn = 'FreqBandPow-BL-5to15_boot.mat';
    load([root_drIn '5to15' filesep fn],'F_*','M_*')
    clear fn 
end


%% 1.1 MvF: Band Power
tstart=tic;

%mPFC-IL
[M_IL_theta_boot, F_IL_theta_boot, M_IL_gamma_boot, F_IL_gamma_boot, M_IL_delta_boot, F_IL_delta_boot,...
    MF_IL_theta_p_test, MF_IL_gamma_p_test, MF_IL_delta_p_test, MF_thetapjm_IL, MF_gammapjm_IL,MF_deltapjm_IL] ...
    = BootStat_MvF(M_IL_theta,M_IL_gamma,M_IL_delta,F_IL_theta,F_IL_gamma,F_IL_delta);
clear F_IL_delta F_IL_gamma F_IL_theta M_IL_delta M_IL_gamma M_IL_theta

%dHPC
[M_DH_theta_boot, F_DH_theta_boot, M_DH_gamma_boot, F_DH_gamma_boot, M_DH_delta_boot, F_DH_delta_boot,...
    MF_DH_theta_p_test, MF_DH_gamma_p_test, MF_DH_delta_p_test, MF_thetapjm_DH, MF_gammapjm_DH,MF_deltapjm_DH] ...
    = BootStat_MvF(M_DH_theta,M_DH_gamma,M_DH_delta,F_DH_theta,F_DH_gamma,F_DH_delta);
clear F_DH_delta F_DH_gamma F_DH_theta M_DH_delta M_DH_gamma M_DH_theta

%vHPC
[M_VH_theta_boot, F_VH_theta_boot, M_VH_gamma_boot, F_VH_gamma_boot, M_VH_delta_boot, F_VH_delta_boot,...
    MF_VH_theta_p_test, MF_VH_gamma_p_test, MF_VH_delta_p_test, MF_thetapjm_VH, MF_gammapjm_VH,MF_deltapjm_VH]...
    = BootStat_MvF(M_VH_theta,M_VH_gamma,M_VH_delta,F_VH_theta,F_VH_gamma,F_VH_delta);
clear F_VH_delta F_VH_gamma F_VH_theta M_VH_delta M_VH_gamma M_VH_theta

%mPFC-PL
[M_PL_theta_boot, F_PL_theta_boot, M_PL_gamma_boot, F_PL_gamma_boot, M_PL_delta_boot, F_PL_delta_boot,...
    MF_PL_theta_p_test, MF_PL_gamma_p_test, MF_PL_delta_p_test, MF_thetapjm_PL, MF_gammapjm_PL,MF_deltapjm_PL]...
    = BootStat_MvF(M_PL_theta,M_PL_gamma,M_PL_delta,F_PL_theta,F_PL_gamma,F_PL_delta);
clear F_PL_delta F_PL_gamma F_PL_theta M_PL_delta M_PL_gamma M_PL_theta

toc(tstart); clear tstart 
    
% Male vs Female: Theta/Gamma/Delta band power. Single p-test
MF_theta_p_test = [MF_IL_theta_p_test MF_DH_theta_p_test MF_VH_theta_p_test MF_PL_theta_p_test]';
MF_gamma_p_test = [MF_IL_gamma_p_test MF_DH_gamma_p_test MF_VH_gamma_p_test MF_PL_gamma_p_test]';
MF_delta_p_test = [MF_IL_delta_p_test MF_DH_delta_p_test MF_VH_delta_p_test MF_PL_delta_p_test]';
    
% Put p-value data into table
T_MF = table(brain_area, MF_theta_p_test, MF_gamma_p_test, MF_delta_p_test);
    T_MF.Properties.VariableNames{2} = 'theta';
    T_MF.Properties.VariableNames{3} = 'gamma';
    T_MF.Properties.VariableNames{4} = 'delta';
    disp('Female vs Male: Band Power')
    disp(T_MF)
    
% Save the data
disp('Saving band power bootstrap statistics..')
fn = 'BandPowBootStats-BL-5to15-MvF.mat';
save([root_drIn '5to15' filesep fn],'T_MF','MF_*','*_boot','subjs','-v7.3')
disp('Saved!')
clear fn 

%% 1.2 Plot mean theta band joint-probability matrices: M vs F 
[h1] = Plot_4pjm_MF(MF_thetapjm_IL,MF_thetapjm_DH,MF_thetapjm_VH,MF_thetapjm_PL,nperms,x);

% Create textbox for figure title
annotation(h1,'textbox',[0.308740324594257 0.944323314529585 0.427370786516854 0.0508054522924403],...
    'String','Theta band power: Joint-Probability matrices',...
    'HorizontalAlignment','center','FontWeight','bold','FontSize',21,...
    'FitBoxToText','off','EdgeColor',[0.941176470588235 0.941176470588235 0.941176470588235]);

% Save figure
fd = [figdrOut 'Bandpower' filesep]; %output directory
    if ~exist(fd,'dir'); mkdir(fd); end    
fn = ['ThetaBandPowBoot_Mean' num2str(nperms) 'JointProbMatrx_MvF'];
saveas(h1,[fd fn '.tif'])
saveas(h1,[fd fn '.fig'])
close(h1); clear h1 ax* fn
disp('Theta bandpower joint-probability matrix figure saved!')


%% 1.3 Plot mean gamma band joint-probability matrices: M vs F 
[h2] = Plot_4pjm_MF(MF_gammapjm_IL,MF_gammapjm_DH,MF_gammapjm_VH,MF_gammapjm_PL,nperms,x);

% Create textbox for figure title
annotation(h2,'textbox',[0.308740324594257 0.944323314529585 0.427370786516854 0.0508054522924403],...
    'String','Gamma band power: Joint-Probability matrices',...
    'HorizontalAlignment','center','FontWeight','bold','FontSize',21,...
    'FitBoxToText','off','EdgeColor',[0.941176470588235 0.941176470588235 0.941176470588235]);

% Save figure
fn = ['GammaBandPowBoot_Mean' num2str(nperms) 'JointProbMatrx_MvF'];
saveas(h2,[fd fn '.tif'])
saveas(h2,[fd fn '.fig'])
close(h2); clear h2 ax* fn
disp('Gamma bandpower joint-probability matrix figure saved!')

%% 1.4 Plot mean delta band joint-probability matrices: M vs F 
[h3] = Plot_4pjm_MF(MF_deltapjm_IL,MF_deltapjm_DH,MF_deltapjm_VH,MF_deltapjm_PL,nperms,x);

% Create textbox for figure title
annotation(h3,'textbox',[0.308740324594257 0.944323314529585 0.427370786516854 0.0508054522924403],...
    'String','Delta band power: Joint-Probability matrices',...
    'HorizontalAlignment','center','FontWeight','bold','FontSize',21,...
    'FitBoxToText','off','EdgeColor',[0.941176470588235 0.941176470588235 0.941176470588235]);

% Save figure
fn = ['DeltaBandPowBoot_Mean' num2str(nperms) 'JointProbMatrx_MvF'];
saveas(h3,[fd fn '.tif'])
saveas(h3,[fd fn '.fig'])
close(h3); clear h3 ax* fn
disp('Delta bandpower joint-probability matrix figure saved!')


% Clean workspace for next segment
clear MF_* T_* *_boot *_M_theta *_M_gamma *_M_delta


%% 1.5 Females/Hormones: Band Power

tstart=tic;
% mPFC-IL 
[fD_IL_theta_boot,fP_IL_theta_boot,fE_IL_theta_boot,fDP_IL_theta_p_test,fDE_IL_theta_p_test,fPE_IL_theta_p_test,DP_IL_thetapjm,DE_IL_thetapjm,PE_IL_thetapjm] = BootStat_FHorms(F_IL_D_theta,F_IL_P_theta,F_IL_E_theta); %Theta
[fD_IL_gamma_boot,fP_IL_gamma_boot,fE_IL_gamma_boot,fDP_IL_gamma_p_test,fDE_IL_gamma_p_test,fPE_IL_gamma_p_test,DP_IL_gammapjm,DE_IL_gammapjm,PE_IL_gammapjm] = BootStat_FHorms(F_IL_D_gamma,F_IL_P_gamma,F_IL_E_gamma); %Gamma
[fD_IL_delta_boot,fP_IL_delta_boot,fE_IL_delta_boot,fDP_IL_delta_p_test,fDE_IL_delta_p_test,fPE_IL_delta_p_test,DP_IL_deltapjm,DE_IL_deltapjm,PE_IL_deltapjm] = BootStat_FHorms(F_IL_D_delta,F_IL_P_delta,F_IL_E_delta); %Delta
% dHPC
[fD_DH_theta_boot,fP_DH_theta_boot,fE_DH_theta_boot,fDP_DH_theta_p_test,fDE_DH_theta_p_test,fPE_DH_theta_p_test,DP_DH_thetapjm,DE_DH_thetapjm,PE_DH_thetapjm] = BootStat_FHorms(F_DH_D_theta,F_DH_P_theta,F_DH_E_theta); 
[fD_DH_gamma_boot,fP_DH_gamma_boot,fE_DH_gamma_boot,fDP_DH_gamma_p_test,fDE_DH_gamma_p_test,fPE_DH_gamma_p_test,DP_DH_gammapjm,DE_DH_gammapjm,PE_DH_gammapjm] = BootStat_FHorms(F_DH_D_gamma,F_DH_P_gamma,F_DH_E_gamma); 
[fD_DH_delta_boot,fP_DH_delta_boot,fE_DH_delta_boot,fDP_DH_delta_p_test,fDE_DH_delta_p_test,fPE_DH_delta_p_test,DP_DH_deltapjm,DE_DH_deltapjm,PE_DH_deltapjm] = BootStat_FHorms(F_DH_D_delta,F_DH_P_delta,F_DH_E_delta); 
%  vHPC
[fD_VH_theta_boot,fP_VH_theta_boot,fE_VH_theta_boot,fDP_VH_theta_p_test,fDE_VH_theta_p_test,fPE_VH_theta_p_test,DP_VH_thetapjm,DE_VH_thetapjm,PE_VH_thetapjm] = BootStat_FHorms(F_VH_D_theta,F_VH_P_theta,F_VH_E_theta); 
[fD_VH_gamma_boot,fP_VH_gamma_boot,fE_VH_gamma_boot,fDP_VH_gamma_p_test,fDE_VH_gamma_p_test,fPE_VH_gamma_p_test,DP_VH_gammapjm,DE_VH_gammapjm,PE_VH_gammapjm] = BootStat_FHorms(F_VH_D_gamma,F_VH_P_gamma,F_VH_E_gamma); 
[fD_VH_delta_boot,fP_VH_delta_boot,fE_VH_delta_boot,fDP_VH_delta_p_test,fDE_VH_delta_p_test,fPE_VH_delta_p_test,DP_VH_deltapjm,DE_VH_deltapjm,PE_VH_deltapjm] = BootStat_FHorms(F_VH_D_delta,F_VH_P_delta,F_VH_E_delta); 
% mPFC-PL 
[fD_PL_theta_boot,fP_PL_theta_boot,fE_PL_theta_boot,fDP_PL_theta_p_test,fDE_PL_theta_p_test,fPE_PL_theta_p_test,DP_PL_thetapjm,DE_PL_thetapjm,PE_PL_thetapjm] = BootStat_FHorms(F_PL_D_theta,F_PL_P_theta,F_PL_E_theta); 
[fD_PL_gamma_boot,fP_PL_gamma_boot,fE_PL_gamma_boot,fDP_PL_gamma_p_test,fDE_PL_gamma_p_test,fPE_PL_gamma_p_test,DP_PL_gammapjm,DE_PL_gammapjm,PE_PL_gammapjm] = BootStat_FHorms(F_PL_D_gamma,F_PL_P_gamma,F_PL_E_gamma);
[fD_PL_delta_boot,fP_PL_delta_boot,fE_PL_delta_boot,fDP_PL_delta_p_test,fDE_PL_delta_p_test,fPE_PL_delta_p_test,DP_PL_deltapjm,DE_PL_deltapjm,PE_PL_deltapjm] = BootStat_FHorms(F_PL_D_delta,F_PL_P_delta,F_PL_E_delta); 
toc(tstart)
clear tstart 
%clear F_IL* F_DH* F_VH* F_PL*

% Put p-value data into tables
  % Females/Hormones: Theta band
fDP_theta_p_test = [fDP_IL_theta_p_test fDP_DH_theta_p_test fDP_VH_theta_p_test fDP_PL_theta_p_test]';
fDE_theta_p_test = [fDE_IL_theta_p_test fDE_DH_theta_p_test fDE_VH_theta_p_test fDE_PL_theta_p_test]';
fPE_theta_p_test = [fPE_IL_theta_p_test fPE_DH_theta_p_test fPE_VH_theta_p_test fPE_PL_theta_p_test]';
T_f_theta = table(brain_area, fDP_theta_p_test, fDE_theta_p_test, fPE_theta_p_test);
    T_f_theta.Properties.VariableNames{2} = 'DvP';
    T_f_theta.Properties.VariableNames{3} = 'DvE';
    T_f_theta.Properties.VariableNames{4} = 'PvE';

  % Females/Hormones: Gamma band
fDP_gamma_p_test = [fDP_IL_gamma_p_test fDP_DH_gamma_p_test fDP_VH_gamma_p_test fDP_PL_gamma_p_test]';
fDE_gamma_p_test = [fDE_IL_gamma_p_test fDE_DH_gamma_p_test fDE_VH_gamma_p_test fDE_PL_gamma_p_test]';
fPE_gamma_p_test = [fPE_IL_gamma_p_test fPE_DH_gamma_p_test fPE_VH_gamma_p_test fPE_PL_gamma_p_test]';
T_f_gamma = table(brain_area, fDP_gamma_p_test, fDE_gamma_p_test, fPE_gamma_p_test);
    T_f_gamma.Properties.VariableNames{2} = 'DvP';
    T_f_gamma.Properties.VariableNames{3} = 'DvE';
    T_f_gamma.Properties.VariableNames{4} = 'PvE';

  % Females/Hormones: Delta band
fDP_delta_p_test = [fDP_IL_delta_p_test fDP_DH_delta_p_test fDP_VH_delta_p_test fDP_PL_delta_p_test]';
fDE_delta_p_test = [fDE_IL_delta_p_test fDE_DH_delta_p_test fDE_VH_delta_p_test fDE_PL_delta_p_test]';
fPE_delta_p_test = [fPE_IL_delta_p_test fPE_DH_delta_p_test fPE_VH_delta_p_test fPE_PL_delta_p_test]';
T_f_delta = table(brain_area, fDP_delta_p_test, fDE_delta_p_test, fPE_delta_p_test);
    T_f_delta.Properties.VariableNames{2} = 'DvP';
    T_f_delta.Properties.VariableNames{3} = 'DvE';
    T_f_delta.Properties.VariableNames{4} = 'PvE';
clear *_p_test
        
% Display table outputs
disp('Female/Hormones: Theta Band Power')
    disp(T_f_theta)
disp('  ');     disp('  ');
disp('Female/Hormones: Gamma Band Power')
    disp(T_f_gamma)
disp('  ');     disp('  ');
disp('Female/Hormones: Delta Band Power')
    disp(T_f_delta)

% Save the data
disp('Saving band power bootstrap statistics..')
fn = 'BandPowBootStats-BL-5to15-Estrous.mat';
save([root_drIn '5to15' filesep fn],'T_f*','DE_*','DP_*','PE_*','*_boot','-v7.3')
disp('Saved!')
clear fn 

%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
%% PICK BACK UP HERE. PUT FEMALE HORMONE PLOTTING INTO ITS OWN FUNCTION, SIMILARLY TO PLOT_4PJM_MF.m
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% 1.6 Plot mean theta band joint-probability matrices: Females/Hormones
% h4 = figure('units','normalized','outerposition',[0 0 1 1]);
% ax1 = subplot(341); %IL - Diestrus v Proestrus
%     imagesc(mean(DP_IL_thetapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
%     title('mPFC-IL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5);
%     colormap(ax1,jet)
% ax2 = subplot(342); %dHPC - Diestrus v Proestrus
%     imagesc(mean(DP_DH_thetapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
%     title('dHPC'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5);
%     colormap(ax2,jet)
% ax3 = subplot(343); %vHPC - Diestrus v Proestrus
%     imagesc(mean(DP_VH_thetapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
%     title('vHPC'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5);
%     colormap(ax3,jet)
% ax4 = subplot(344); %PL - Diestrus v Proestrus
%     imagesc(mean(DP_PL_thetapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
%     title('mPFC-PL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5);
%     colormap(ax4,jet)
% ax5 = subplot(345); %IL - Diestrus v Estrus
%     imagesc(mean(DE_IL_thetapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax5,jet)
% ax6 = subplot(346); %dHPC - Diestrus v Estrus
%     imagesc(mean(DE_DH_thetapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax6,jet)
% ax7 = subplot(347); %vHPC - Diestrus v Estrus
%     imagesc(mean(DE_VH_thetapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax7,jet)
% ax8 = subplot(348); %PL - Diestrus v Estrus
%     imagesc(mean(DE_PL_thetapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax8,jet)
% ax9 = subplot(349); %IL - Proestrus v Estrus
%     imagesc(mean(PE_IL_thetapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Proestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax9,jet)
% ax10 = subplot(3,4,10); %dHPC - Proestrus v Estrus
%     imagesc(mean(PE_DH_thetapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Proestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax10,jet)
% ax11 = subplot(3,4,11); %vHPC - Proestrus v Estrus
%     imagesc(mean(PE_VH_thetapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Proestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax11,jet)
% ax12 = subplot(3,4,12); %PL - Proestrus v Estrus
%     imagesc(mean(PE_PL_thetapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Proestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax12,jet) 
%     
% % Save figure                                                                       (fixed)
% fn = ['ThetaBandPowBoot_Mean' num2str(nperms) 'JointProbMatrx_Horms'];
% saveas(h4,[fd fn '.tif'])
% saveas(h4,[fd fn '.fig'])
% disp('Theta phase lag/Hormones joint-probability matrix figure saved!')
% close(h4); clear h4 ax* fn


%% 1.7 Plot mean gamma band joint-probability matrices: Females/Hormones              TO DO
% h5 = figure('units','normalized','outerposition',[0 0 1 1]);
% ax1 = subplot(341); %IL - Diestrus v Proestrus
%     imagesc(mean(DP_IL_gammapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
%     title('mPFC-IL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5);
%     colormap(ax1,jet)
% ax2 = subplot(342); %dHPC - Diestrus v Proestrus
%     imagesc(mean(DP_DH_gammapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
%     title('dHPC'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5);
%     colormap(ax2,jet)
% ax3 = subplot(343); %vHPC - Diestrus v Proestrus
%     imagesc(mean(DP_VH_gammapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
%     title('vHPC'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5);
%     colormap(ax3,jet)
% ax4 = subplot(344); %PL - Diestrus v Proestrus
%     imagesc(mean(DP_PL_gammapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
%     title('mPFC-PL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5);
%     colormap(ax4,jet)
% ax5 = subplot(345); %IL - Diestrus v Estrus
%     imagesc(mean(DE_IL_gammapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax5,jet)
% ax6 = subplot(346); %dHPC - Diestrus v Estrus
%     imagesc(mean(DE_DH_gammapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax6,jet)
% ax7 = subplot(347); %vHPC - Diestrus v Estrus
%     imagesc(mean(DE_VH_gammapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax7,jet)
% ax8 = subplot(348); %PL - Diestrus v Estrus
%     imagesc(mean(DE_PL_gammapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax8,jet)
% ax9 = subplot(349); %IL - Proestrus v Estrus
%     imagesc(mean(PE_IL_gammapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Proestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax9,jet)
% ax10 = subplot(3,4,10); %dHPC - Proestrus v Estrus
%     imagesc(mean(PE_DH_gammapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Proestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax10,jet)
% ax11 = subplot(3,4,11); %vHPC - Proestrus v Estrus
%     imagesc(mean(PE_VH_gammapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Proestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax11,jet)
% ax12 = subplot(3,4,12); %PL - Proestrus v Estrus
%     imagesc(mean(PE_PL_gammapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Proestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax12,jet) 
%     
% % Save figure
% saveas(h5,[fd 'GammaBandPowBoot_Mean1000JointProbMatrx_Horms.fig'])
% saveas(h5,[fd 'GammaBandPowBoot_Mean1000JointProbMatrx_Horms.tif'])
% disp('Gamma phase lag/Hormones joint-probability matrix figure saved!')
% close(h5); clear h5 ax*

%% 1.8 Plot mean delta band joint-probability matrices: Females/Hormones
% h6 = figure('units','normalized','outerposition',[0 0 1 1]);
% ax1 = subplot(341); %IL - Diestrus v Proestrus
%     imagesc(mean(DP_IL_deltapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
%     title('mPFC-IL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5);
%     colormap(ax1,jet)
% ax2 = subplot(342); %dHPC - Diestrus v Proestrus
%     imagesc(mean(DP_DH_deltapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
%     title('dHPC'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5);
%     colormap(ax2,jet)
% ax3 = subplot(343); %vHPC - Diestrus v Proestrus
%     imagesc(mean(DP_VH_deltapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
%     title('vHPC'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5);
%     colormap(ax3,jet)
% ax4 = subplot(344); %PL - Diestrus v Proestrus
%     imagesc(mean(DP_PL_deltapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
%     title('mPFC-PL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5);
%     colormap(ax4,jet)
% ax5 = subplot(345); %IL - Diestrus v Estrus
%     imagesc(mean(DE_IL_deltapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax5,jet)
% ax6 = subplot(346); %dHPC - Diestrus v Estrus
%     imagesc(mean(DE_DH_deltapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax6,jet)
% ax7 = subplot(347); %vHPC - Diestrus v Estrus
%     imagesc(mean(DE_VH_deltapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax7,jet)
% ax8 = subplot(348); %PL - Diestrus v Estrus
%     imagesc(mean(DE_PL_deltapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Diestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax8,jet)
% ax9 = subplot(349); %IL - Proestrus v Estrus
%     imagesc(mean(PE_IL_deltapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Proestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax9,jet)
% ax10 = subplot(3,4,10); %dHPC - Proestrus v Estrus
%     imagesc(mean(PE_DH_deltapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Proestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax10,jet)
% ax11 = subplot(3,4,11); %vHPC - Proestrus v Estrus
%     imagesc(mean(PE_VH_deltapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Proestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax11,jet)
% ax12 = subplot(3,4,12); %PL - Proestrus v Estrus
%     imagesc(mean(PE_PL_deltapjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
%     axis xy square; xlabel('Proestrus'); ylabel('Estrus');
%     set(gca,'fontsize',14);
%     colormap(ax12,jet) 
%     
% % Save figure
% saveas(h6,[fd 'DeltaBandPowBoot_Mean1000JointProbMatrx_Horms.fig'])
% saveas(h6,[fd 'DeltaBandPowBoot_Mean1000JointProbMatrx_Horms.tif'])
% disp('Delta phase lag/Hormones joint-probability matrix figure saved!')
% close(h6); clear h6 ax*
                                                                            

% Reset workspace for next process
% clear fD* fP* fE* T_f* fd x PE_* DE_* DP*
clear T_f* fd x PE_* DE_* DP* F_*


%% 1.9 Males vs Estrous stages: Band Power

% Load bootstrapped male data: Band power
if ~exist('M_DH_theta','var')
    fn = 'BandPowBootStats-BL-5to15-MvF.mat';
    load([root_drIn '5to15' filesep fn],'M_*')
    clear fn 
end

% Ptest: Males vs Hormones
%mPFC-IL
[DM_IL_theta_p_test,DM_IL_theta_pjm] = get_direct_prob(M_IL_theta_boot, fD_IL_theta_boot); % theta: male vs diestrus
[PM_IL_theta_p_test,PM_IL_theta_pjm] = get_direct_prob(M_IL_theta_boot, fP_IL_theta_boot); % male vs proestrus
[EM_IL_theta_p_test,EM_IL_theta_pjm] = get_direct_prob(M_IL_theta_boot, fE_IL_theta_boot); % male vs estrus
 [DM_IL_gamma_p_test,DM_IL_gamma_pjm] = get_direct_prob(M_IL_gamma_boot, fD_IL_gamma_boot); % gamma
 [PM_IL_gamma_p_test,PM_IL_gamma_pjm] = get_direct_prob(M_IL_gamma_boot, fP_IL_gamma_boot);
 [EM_IL_gamma_p_test,EM_IL_gamma_pjm] = get_direct_prob(M_IL_gamma_boot, fE_IL_gamma_boot);
  [DM_IL_delta_p_test,DM_IL_delta_pjm] = get_direct_prob(M_IL_delta_boot, fD_IL_delta_boot); % delta
  [PM_IL_delta_p_test,PM_IL_delta_pjm] = get_direct_prob(M_IL_delta_boot, fP_IL_delta_boot);
  [EM_IL_delta_p_test,EM_IL_delta_pjm] = get_direct_prob(M_IL_delta_boot, fE_IL_delta_boot);

% dHPC
[DM_DH_theta_p_test,DM_DH_theta_pjm] = get_direct_prob(M_DH_theta_boot, fD_DH_theta_boot); % theta
[PM_DH_theta_p_test,PM_DH_theta_pjm] = get_direct_prob(M_DH_theta_boot, fP_DH_theta_boot);
[EM_DH_theta_p_test,EM_DH_theta_pjm] = get_direct_prob(M_DH_theta_boot, fE_DH_theta_boot);
 [DM_DH_gamma_p_test,DM_DH_gamma_pjm] = get_direct_prob(M_DH_gamma_boot, fD_DH_gamma_boot); % gamma
 [PM_DH_gamma_p_test,PM_DH_gamma_pjm] = get_direct_prob(M_DH_gamma_boot, fP_DH_gamma_boot);
 [EM_DH_gamma_p_test,EM_DH_gamma_pjm] = get_direct_prob(M_DH_gamma_boot, fE_DH_gamma_boot);
  [DM_DH_delta_p_test,DM_DH_delta_pjm] = get_direct_prob(M_DH_delta_boot, fD_DH_delta_boot); % delta
  [PM_DH_delta_p_test,PM_DH_delta_pjm] = get_direct_prob(M_DH_delta_boot, fP_DH_delta_boot);
  [EM_DH_delta_p_test,EM_DH_delta_pjm] = get_direct_prob(M_DH_delta_boot, fE_DH_delta_boot);
  
%  vHPC
[DM_VH_theta_p_test,DM_VH_theta_pjm] = get_direct_prob(M_VH_theta_boot, fD_VH_theta_boot); % theta
[PM_VH_theta_p_test,PM_VH_theta_pjm] = get_direct_prob(M_VH_theta_boot, fP_VH_theta_boot);
[EM_VH_theta_p_test,EM_VH_theta_pjm] = get_direct_prob(M_VH_theta_boot, fE_VH_theta_boot);
 [DM_VH_gamma_p_test,DM_VH_gamma_pjm] = get_direct_prob(M_VH_gamma_boot, fD_VH_gamma_boot); % gamma
 [PM_VH_gamma_p_test,PM_VH_gamma_pjm] = get_direct_prob(M_VH_gamma_boot, fP_VH_gamma_boot);
 [EM_VH_gamma_p_test,EM_VH_gamma_pjm] = get_direct_prob(M_VH_gamma_boot, fE_VH_gamma_boot);
  [DM_VH_delta_p_test,DM_VH_delta_pjm] = get_direct_prob(M_VH_delta_boot, fD_VH_delta_boot); % delta
  [PM_VH_delta_p_test,PM_VH_delta_pjm] = get_direct_prob(M_VH_delta_boot, fP_VH_delta_boot);
  [EM_VH_delta_p_test,EM_VH_delta_pjm] = get_direct_prob(M_VH_delta_boot, fE_VH_delta_boot);

% mPFC-PL
[DM_PL_theta_p_test,DM_PL_theta_pjm] = get_direct_prob(M_PL_theta_boot, fD_PL_theta_boot); % theta
[PM_PL_theta_p_test,PM_PL_theta_pjm] = get_direct_prob(M_PL_theta_boot, fP_PL_theta_boot);
[EM_PL_theta_p_test,EM_PL_theta_pjm] = get_direct_prob(M_PL_theta_boot, fE_PL_theta_boot);
 [DM_PL_gamma_p_test,DM_PL_gamma_pjm] = get_direct_prob(M_PL_gamma_boot, fD_PL_gamma_boot); % gamma
 [PM_PL_gamma_p_test,PM_PL_gamma_pjm] = get_direct_prob(M_PL_gamma_boot, fP_PL_gamma_boot);
 [EM_PL_gamma_p_test,EM_PL_gamma_pjm] = get_direct_prob(M_PL_gamma_boot, fE_PL_gamma_boot);
  [DM_PL_delta_p_test,DM_PL_delta_pjm] = get_direct_prob(M_PL_delta_boot, fD_PL_delta_boot); % delta
  [PM_PL_delta_p_test,PM_PL_delta_pjm] = get_direct_prob(M_PL_delta_boot, fP_PL_delta_boot);
  [EM_PL_delta_p_test,EM_PL_delta_pjm] = get_direct_prob(M_PL_delta_boot, fE_PL_delta_boot);

% Put p-value data into tables: Males vs Hormones
  % Theta band
DM_theta_p_test = [DM_IL_theta_p_test DM_DH_theta_p_test DM_VH_theta_p_test DM_PL_theta_p_test]';
PM_theta_p_test = [PM_IL_theta_p_test PM_DH_theta_p_test PM_VH_theta_p_test PM_PL_theta_p_test]';
EM_theta_p_test = [EM_IL_theta_p_test EM_DH_theta_p_test EM_VH_theta_p_test EM_PL_theta_p_test]';
T_MvHorm_theta = table(brain_area, DM_theta_p_test, PM_theta_p_test, EM_theta_p_test);
    T_MvHorm_theta.Properties.VariableNames{2} = 'DvMale';
    T_MvHorm_theta.Properties.VariableNames{3} = 'PvMale';
    T_MvHorm_theta.Properties.VariableNames{4} = 'EvMale';

  % Gamma band
DM_gamma_p_test = [DM_IL_gamma_p_test DM_DH_gamma_p_test DM_VH_gamma_p_test DM_PL_gamma_p_test]';
PM_gamma_p_test = [PM_IL_gamma_p_test PM_DH_gamma_p_test PM_VH_gamma_p_test PM_PL_gamma_p_test]';
EM_gamma_p_test = [EM_IL_gamma_p_test EM_DH_gamma_p_test EM_VH_gamma_p_test EM_PL_gamma_p_test]';
T_MvHorm_gamma = table(brain_area, DM_gamma_p_test, PM_gamma_p_test, EM_gamma_p_test);
    T_MvHorm_gamma.Properties.VariableNames{2} = 'DvMale';
    T_MvHorm_gamma.Properties.VariableNames{3} = 'PvMale';
    T_MvHorm_gamma.Properties.VariableNames{4} = 'EvMale';

  % Delta band
DM_delta_p_test = [DM_IL_delta_p_test DM_DH_delta_p_test DM_VH_delta_p_test DM_PL_delta_p_test]';
PM_delta_p_test = [PM_IL_delta_p_test PM_DH_delta_p_test PM_VH_delta_p_test PM_PL_delta_p_test]';
EM_delta_p_test = [EM_IL_delta_p_test EM_DH_delta_p_test EM_VH_delta_p_test EM_PL_delta_p_test]';
T_MvHorm_delta = table(brain_area, DM_delta_p_test, PM_delta_p_test, EM_delta_p_test);
    T_MvHorm_delta.Properties.VariableNames{2} = 'DvMale';
    T_MvHorm_delta.Properties.VariableNames{3} = 'PvMale';
    T_MvHorm_delta.Properties.VariableNames{4} = 'EvMale';
clear *_p_test
        
% Display table outputs
disp('Male vs Hormones: Theta Band Power')
    disp(T_MvHorm_theta)
disp('  ');     disp('  ');
disp('Male vs Hormones: Gamma Band Power')
    disp(T_MvHorm_gamma)
disp('  ');     disp('  ');
disp('Male vs Hormones: Delta Band Power')
    disp(T_MvHorm_delta)

% Save the data
disp('Saving band power bootstrap statistics..')
fn = 'BandPowBootStats-BL-5to15-MvHorms.mat';
save([root_drIn '5to15' filesep fn],'T_*','DM_*','PM_*','EM_*','*_boot','-v7.3')
disp('Saved!')
clear fn 



%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 2.0 Theta Phase Lags
% Calls data: 'ThetaPhaseLag-dHthresh-BL_boot.mat' 
% Generated by: Format4Bootstrap_thetaphaselagdH.m, called within Thesis4_AnalyzeAllVelDat.m

Connection = {'mPFCIL-dHPC'; 'mPFCIL-vHPC'; 'mPFCIL-mPFCPL'; 'dHPC-vHPC'; 'dHPC-mPFCPL'; 'vHPC-mPFCPL'};

% Load theta phase lag data: Width at half-max peak of lag distributions
if ~exist('M_ILDH','var') || ~exist('F_ILDH','var')
    disp('Loading theta phase lag data...')
%     fn = 'ThetaPhaseLag-dHthresh-BL_boot.mat';
    fn = 'ThetaPhaseLag2-dHthresh-BL_boot.mat';
    load([root_drIn fn],'F_*','M_*')
    clear fn 
end

%% 2.1 MvF: Theta phase lags
nboot = 10^4; %# of bootstrap permutations
f_n = 1; 

%Preallocate output space
MF_ILDH_p_test = zeros(1,nperms);
MF_ILVH_p_test = zeros(1,nperms);
MF_ILPL_p_test = zeros(1,nperms);
MF_DHVH_p_test = zeros(1,nperms);
MF_DHPL_p_test = zeros(1,nperms);
MF_VHPL_p_test = zeros(1,nperms);
MF_ILDH_pjm = zeros(100,100,nperms);
MF_ILVH_pjm = zeros(100,100,nperms);
MF_ILPL_pjm = zeros(100,100,nperms);
MF_DHVH_pjm = zeros(100,100,nperms);
MF_DHPL_pjm = zeros(100,100,nperms);
MF_VHPL_pjm = zeros(100,100,nperms);

for i = 1:nperms %these take ~1min each
    fprintf('Bootstrap stats: Permutation %i of %i\n',i,nperms)
    tstart=tic;
    M_ILDH_boot = get_bootstrapped_sample(M_ILDH, nboot, f_n); 
    M_ILVH_boot = get_bootstrapped_sample(M_ILVH, nboot, f_n); 
    M_ILPL_boot = get_bootstrapped_sample(M_ILPL, nboot, f_n); 
    M_DHVH_boot = get_bootstrapped_sample(M_DHVH, nboot, f_n); 
    M_DHPL_boot = get_bootstrapped_sample(M_DHPL, nboot, f_n); 
    M_VHPL_boot = get_bootstrapped_sample(M_VHPL, nboot, f_n); 
    F_ILDH_boot = get_bootstrapped_sample(F_ILDH, nboot, f_n);
    F_ILVH_boot = get_bootstrapped_sample(F_ILVH, nboot, f_n);
    F_ILPL_boot = get_bootstrapped_sample(F_ILPL, nboot, f_n);
    F_DHVH_boot = get_bootstrapped_sample(F_DHVH, nboot, f_n);
    F_DHPL_boot = get_bootstrapped_sample(F_DHPL, nboot, f_n);
    F_VHPL_boot = get_bootstrapped_sample(F_VHPL, nboot, f_n);
    [MF_ILDH_p_test(i),MF_ILDH_pjm(:,:,i)] = get_direct_prob(M_ILDH_boot,F_ILDH_boot);
    [MF_ILVH_p_test(i),MF_ILVH_pjm(:,:,i)] = get_direct_prob(M_ILVH_boot,F_ILVH_boot);
    [MF_ILPL_p_test(i),MF_ILPL_pjm(:,:,i)] = get_direct_prob(M_ILPL_boot,F_ILPL_boot);
    [MF_DHVH_p_test(i),MF_DHVH_pjm(:,:,i)] = get_direct_prob(M_DHVH_boot,F_DHVH_boot);
    [MF_DHPL_p_test(i),MF_DHPL_pjm(:,:,i)] = get_direct_prob(M_DHPL_boot,F_DHPL_boot);
    [MF_VHPL_p_test(i),MF_VHPL_pjm(:,:,i)] = get_direct_prob(M_VHPL_boot,F_VHPL_boot);
    toc(tstart)
%     clear *_boot
end 
clear i tstart nboot f_n M_ILDH M_ILVH M_ILPL M_DHVH M_DHPL M_VHPL ...
    F_ILDH F_ILVH F_ILPL F_DHVH F_DHPL F_VHPL

% Put p-value data into tables
%   % mean values
% T_MFmean = table(Connection, [mean(MF_ILDH_p_test(1:nperms)) mean(MF_ILVH_p_test(1:nperms)) mean(MF_ILPL_p_test(1:nperms)) mean(MF_DHVH_p_test(1:nperms)) mean(MF_DHPL_p_test(1:nperms)) mean(MF_VHPL_p_test(1:nperms))]');
% T_MFmean.Properties.VariableNames{2} = 'MvF';
%   % median values
% T_MFmed = table(Connection, [median(MF_ILDH_p_test(1:nperms)) median(MF_ILVH_p_test(1:nperms)) median(MF_ILPL_p_test(1:nperms)) median(MF_DHVH_p_test(1:nperms)) median(MF_DHPL_p_test(1:nperms)) median(MF_VHPL_p_test(1:nperms))]');
% T_MFmed.Properties.VariableNames{2} = 'MvF';
  % single value
T_MF = table(Connection, [MF_ILDH_p_test(1) MF_ILVH_p_test(1) MF_ILPL_p_test(1) MF_DHVH_p_test(1) MF_DHPL_p_test(1) MF_VHPL_p_test(1)]');

% Display table outputs
%     disp('Male vs. Female: Theta Phase Lag')
%     fprintf('Mean p-value: %i permutations\n',nperms)
%     disp(T_MFmean)
%     
%     disp('Male vs. Female: Theta Phase Lag')
%     fprintf('Median p-value: %i permutations\n',nperms)
%     disp(T_MFmed)
% 
    disp('Male vs. Female: Theta Phase Lag')
    disp(T_MF)
    
% Save the data
disp('Saving Theta Phase Lag bootstrap statistics: Sex differences..')
% fn = 'ThetaPhaseLagBootStats-dHthresh-BL-MF.mat';
fn = 'ThetaPhaseLagBootStats2-dHthresh-BL-MF.mat';
% save([root_drIn fn],'T_*','MF_*','-v7.3') 
save([root_drIn fn],'T_MF','MF_*','*_boot','-v7.3') 
disp('Saved!')
clear fn

%% 2.2 Plot mean theta phase lag joint-probability matrices: M vs F 
H1 = figure('units','normalized','outerposition',[0 0 1 1]);
ax1 = subplot(231); %ILDH
    imagesc(mean(MF_ILDH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; 
%     xlabel('Male ILDH'); ylabel('Female ILDH')
    xlabel('Female ILDH'); ylabel('Male ILDH')
    set(gca,'fontsize',14)
    colormap(ax1,jet)
ax2 = subplot(232); %ILVH
    imagesc(mean(MF_ILVH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; 
    %     xlabel('Male ILDH'); ylabel('Female ILDH')
    xlabel('Female ILDH'); ylabel('Male ILDH')
    title('Theta phase lags: Joint-probability matrices')
    set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5)
    colormap(ax2,jet)
ax3 = subplot(233); %ILPL
    imagesc(mean(MF_ILPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; 
    %     xlabel('Male ILDH'); ylabel('Female ILDH')
    xlabel('Female ILDH'); ylabel('Male ILDH')
    set(gca,'fontsize',14)
    colormap(ax3,jet)
ax4 = subplot(234); %DHVH
    imagesc(mean(MF_DHVH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; 
    %     xlabel('Male ILDH'); ylabel('Female ILDH')
    xlabel('Female ILDH'); ylabel('Male ILDH')
    set(gca,'fontsize',14)
    colormap(ax4,jet)
ax5 = subplot(235); %DHPL
    imagesc(mean(MF_DHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Male DHPL'); ylabel('Female DHPL')
    set(gca,'fontsize',14)
    colormap(ax5,jet)
ax6 = subplot(236); %VHPL
    imagesc(mean(MF_VHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; 
    %     xlabel('Male ILDH'); ylabel('Female ILDH')
    xlabel('Female ILDH'); ylabel('Male ILDH')
    set(gca,'fontsize',14)
    colormap(ax6,jet)
    
% Save figure
fd = [figdrOut 'ThetaPhaseLag' filesep]; %output directory
    if ~exist(fd,'dir'); mkdir(fd); end    
saveas(H1,[fd 'ThetaPhaseLagBoot_Mean1000JointProbMatrx_MvF.tif'])
saveas(H1,[fd 'ThetaPhaseLagBoot_Mean1000JointProbMatrx_MvF.fig'])
close(H1); clear H1 ax*
disp('Phase lag joint-probability matrix figure saved!')
clear *_pjm


% Clean workspace for next segment
clear M_*  *_M

%% 2.3 Females/Hormones: Theta phase lags    

% Preallocate output space
 %ILDH
fDP_ILDH_p_test = zeros(1,nperms); fDE_ILDH_p_test = zeros(1,nperms); fPE_ILDH_p_test = zeros(1,nperms);
DP_ILDH_pjm = zeros(100,100,nperms); DE_ILDH_pjm = zeros(100,100,nperms); PE_ILDH_pjm = zeros(100,100,nperms);
 %ILVH
fDP_ILVH_p_test = zeros(1,nperms); fDE_ILVH_p_test = zeros(1,nperms); fPE_ILVH_p_test = zeros(1,nperms);
DP_ILVH_pjm = zeros(100,100,nperms); DE_ILVH_pjm = zeros(100,100,nperms); PE_ILVH_pjm = zeros(100,100,nperms);
 %ILPL
fDP_ILPL_p_test = zeros(1,nperms); fDE_ILPL_p_test = zeros(1,nperms); fPE_ILPL_p_test = zeros(1,nperms);
DP_ILPL_pjm = zeros(100,100,nperms); DE_ILPL_pjm = zeros(100,100,nperms); PE_ILPL_pjm = zeros(100,100,nperms);
 %DHVH
fDP_DHVH_p_test = zeros(1,nperms); fDE_DHVH_p_test = zeros(1,nperms); fPE_DHVH_p_test = zeros(1,nperms);
DP_DHVH_pjm = zeros(100,100,nperms); DE_DHVH_pjm = zeros(100,100,nperms); PE_DHVH_pjm = zeros(100,100,nperms);
 %DHPL
fDP_DHPL_p_test = zeros(1,nperms); fDE_DHPL_p_test = zeros(1,nperms); fPE_DHPL_p_test = zeros(1,nperms);
DP_DHPL_pjm = zeros(100,100,nperms); DE_DHPL_pjm = zeros(100,100,nperms); PE_DHPL_pjm = zeros(100,100,nperms);
 %VHPL
fDP_VHPL_p_test = zeros(1,nperms); fDE_VHPL_p_test = zeros(1,nperms); fPE_VHPL_p_test = zeros(1,nperms);
DP_VHPL_pjm = zeros(100,100,nperms); DE_VHPL_pjm = zeros(100,100,nperms); PE_VHPL_pjm = zeros(100,100,nperms);

% Bootstrap Females/Hormones: Theta Phase lag
  %These take ~30sec each loop
for i = 1:nperms
    fprintf('Bootstrap stats: Permutation %i of %i\n',i,nperms)
    tstart=tic;
    [fDP_ILDH_p_test(i),fDE_ILDH_p_test(i),fPE_ILDH_p_test(i),DP_ILDH_pjm(:,:,i),DE_ILDH_pjm(:,:,i),PE_ILDH_pjm(:,:,i)] = BootStat_FHorms(F_ILDH_D,F_ILDH_P,F_ILDH_E); %ILDH
    [fDP_ILVH_p_test(i),fDE_ILVH_p_test(i),fPE_ILVH_p_test(i),DP_ILVH_pjm(:,:,i),DE_ILVH_pjm(:,:,i),PE_ILVH_pjm(:,:,i)] = BootStat_FHorms(F_ILVH_D,F_ILVH_P,F_ILVH_E); %ILVH
    [fDP_ILPL_p_test(i),fDE_ILPL_p_test(i),fPE_ILPL_p_test(i),DP_ILPL_pjm(:,:,i),DE_ILPL_pjm(:,:,i),PE_ILPL_pjm(:,:,i)] = BootStat_FHorms(F_ILPL_D,F_ILPL_P,F_ILPL_E); %ILPL
    [fDP_DHVH_p_test(i),fDE_DHVH_p_test(i),fPE_DHVH_p_test(i),DP_DHVH_pjm(:,:,i),DE_DHVH_pjm(:,:,i),PE_DHVH_pjm(:,:,i)] = BootStat_FHorms(F_DHVH_D,F_DHVH_P,F_DHVH_E); %DHVH
    [fDP_DHPL_p_test(i),fDE_DHPL_p_test(i),fPE_DHPL_p_test(i),DP_DHPL_pjm(:,:,i),DE_DHPL_pjm(:,:,i),PE_DHPL_pjm(:,:,i)] = BootStat_FHorms(F_DHPL_D,F_DHPL_P,F_DHPL_E); %DHPL
    [fDP_VHPL_p_test(i),fDE_VHPL_p_test(i),fPE_VHPL_p_test(i),DP_VHPL_pjm(:,:,i),DE_VHPL_pjm(:,:,i),PE_VHPL_pjm(:,:,i)] = BootStat_FHorms(F_VHPL_D,F_VHPL_P,F_VHPL_E); %VHPL
    toc(tstart)
end
clear i tstart F_*

% Put p-value data into tables
  % mean values
DvPmean = [mean(fDP_ILDH_p_test(1:nperms)) mean(fDP_ILVH_p_test(1:nperms)) mean(fDP_ILPL_p_test(1:nperms)) mean(fDP_DHVH_p_test(1:nperms)) mean(fDP_DHPL_p_test(1:nperms)) mean(fDP_VHPL_p_test(1:nperms))]';
DvEmean = [mean(fDE_ILDH_p_test(1:nperms)) mean(fDE_ILVH_p_test(1:nperms)) mean(fDE_ILPL_p_test(1:nperms)) mean(fDE_DHVH_p_test(1:nperms)) mean(fDE_DHPL_p_test(1:nperms)) mean(fDE_VHPL_p_test(1:nperms))]';
PvEmean = [mean(fPE_ILDH_p_test(1:nperms)) mean(fPE_ILVH_p_test(1:nperms)) mean(fPE_ILPL_p_test(1:nperms)) mean(fPE_DHVH_p_test(1:nperms)) mean(fPE_DHPL_p_test(1:nperms)) mean(fPE_VHPL_p_test(1:nperms))]';
T_meanHormones = table(Connection, DvPmean, DvEmean, PvEmean);
T_meanHormones.Properties.VariableNames{2} = 'DvP';
T_meanHormones.Properties.VariableNames{3} = 'DvE';
T_meanHormones.Properties.VariableNames{4} = 'PvE';
clear DvPmean DvEmean PvEmean
  % median values
DvPmed = [median(fDP_ILDH_p_test(1:nperms)) median(fDP_ILVH_p_test(1:nperms)) median(fDP_ILPL_p_test(1:nperms)) median(fDP_DHVH_p_test(1:nperms)) median(fDP_DHPL_p_test) median(fDP_VHPL_p_test(1:nperms))]';
DvEmed = [median(fDE_ILDH_p_test(1:nperms)) median(fDE_ILVH_p_test(1:nperms)) median(fDE_ILPL_p_test(1:nperms)) median(fDE_DHVH_p_test(1:nperms)) median(fDE_DHPL_p_test) median(fDE_VHPL_p_test(1:nperms))]';
PvEmed = [median(fPE_ILDH_p_test(1:nperms)) median(fPE_ILVH_p_test(1:nperms)) median(fPE_ILPL_p_test(1:nperms)) median(fPE_DHVH_p_test(1:nperms)) median(fPE_DHPL_p_test) median(fPE_VHPL_p_test(1:nperms))]';
T_medHormones = table(Connection, DvPmed, DvEmed, PvEmed);
T_medHormones.Properties.VariableNames{2} = 'DvP';
T_medHormones.Properties.VariableNames{3} = 'DvE';
T_medHormones.Properties.VariableNames{4} = 'PvE';
clear DvPmed DvEmed PvEmed
        
% Display table outputs
disp('Female Hormones: Theta Phase Lag')
fprintf('Mean p-value: %i permutations\n',nperms)
disp(T_meanHormones)
disp('  ')
disp('Female Hormones: Theta Phase Lag')
fprintf('Median p-value: %i permutations\n',nperms)
disp(T_medHormones)

% Save the data
disp('Saving Theta Phase Lag bootstrap statistics: Female/Hormones..')
fn = 'ThetaPhaseLagBootStats-dHthresh-BL-Hormones.mat';
save([root_drIn fn],'T_*','fDP*','fDE*','fPE*','DP_*','DE_*','PE_*','-v7.3') %done on 2020-03-04
disp('Saved!')
clear fn

%% 2.4 Plot mean theta phase lag joint-probability matrices: Females/Hormones
H2 = figure('units','normalized','outerposition',[0 0 1 1]);
ax1 = subplot(341); %ILDH - Diestrus v Proestrus
    imagesc(mean(DP_ILDH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
    title('dHPC-mPFCIL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.25);
    colormap(ax1,jet)
ax2 = subplot(342); %ILVH - Diestrus v Proestrus
    imagesc(mean(DP_ILVH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
    title('vHPC-mPFCIL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.25);
    colormap(ax2,jet)
ax3 = subplot(343); %PLDH - Diestrus v Proestrus
    imagesc(mean(DP_DHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
    title('dHPC-mPFCPL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.25);
    colormap(ax3,jet)
ax4 = subplot(344); %PLVH - Diestrus v Proestrus
    imagesc(mean(DP_VHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
    title('vHPC-mPFCPL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.25);
    colormap(ax4,jet)
ax5 = subplot(345); %ILDH - Diestrus v Estrus
    imagesc(mean(DE_ILDH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Diestrus'); ylabel('Estrus');
    set(gca,'fontsize',14);
    colormap(ax5,jet)
ax6 = subplot(346); %ILVH - Diestrus v Estrus
    imagesc(mean(DE_ILVH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Diestrus'); ylabel('Estrus');
    set(gca,'fontsize',14);
    colormap(ax6,jet)
ax7 = subplot(347); %PLDH - Diestrus v Estrus
    imagesc(mean(DE_DHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Diestrus'); ylabel('Estrus');
    set(gca,'fontsize',14);
    colormap(ax7,jet)
ax8 = subplot(348); %VHPL - Diestrus v Estrus
    imagesc(mean(DE_VHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Diestrus'); ylabel('Estrus');
    set(gca,'fontsize',14);
    colormap(ax8,jet)
ax9 = subplot(349); %ILDH - Proestrus v Estrus
    imagesc(mean(PE_ILDH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Proestrus'); ylabel('Estrus');
    set(gca,'fontsize',14);
    colormap(ax9,jet)
ax10 = subplot(3,4,10); %ILVH - Proestrus v Estrus
    imagesc(mean(PE_ILVH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Proestrus'); ylabel('Estrus');
    set(gca,'fontsize',14);
    colormap(ax10,jet)
ax11 = subplot(3,4,11); %PLDH - Proestrus v Estrus
    imagesc(mean(PE_DHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Proestrus'); ylabel('Estrus');
    set(gca,'fontsize',14);
    colormap(ax11,jet)
ax12 = subplot(3,4,12); %VHPL - Proestrus v Estrus
    imagesc(mean(PE_VHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
    axis xy square; xlabel('Proestrus'); ylabel('Estrus');
    set(gca,'fontsize',14);
    colormap(ax12,jet) 
    
% Save figure
fd = [figdrOut 'ThetaPhaseLag' filesep]; %output directory
saveas(H2,[fd 'ThetaPhaseLagBoot_Mean1000JointProbMatrx_Horms.fig'])
saveas(H2,[fd 'ThetaPhaseLagBoot_Mean1000JointProbMatrx_Horms.tif'])
close(H2); clear H2 ax* fd 
disp('Theta phase lag/Hormones joint-probability matrix figure saved!')


% Clean up workspace
clear fD* fP* F* T_* fE* *_pjm

% 
% %% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 3.0 Hierarchical bootstrap: Theta, Gamma, Delta R^2                      STARTED 3/10/20 4:17PM DOWNSTAIRS
% Calls data: '*Rsq-BL-boot.mat'
% Generated by: Format4Bootstrap_Rsq2.m, called within Thesis4_AnalyzeAllVelDat.m

nboot = 10^4; %# of bootstrap permutations
f_n = 1; 
Bands = {'Theta' 'Gamma' 'Delta'}; %frequency bands for which R^2 has been calculated
Connection = {'mPFCIL-dHPC'; 'mPFCIL-vHPC'; 'mPFCIL-mPFCPL'; 'dHPC-vHPC'; 'dHPC-mPFCPL'; 'vHPC-mPFCPL'};

for bi = 1:length(Bands) %loop theta, gamma, delta bands
    fprintf('Analyzing for bootstrap: %s band\n',Bands{bi})
    
    % Load R^2 data
    fn = [Bands{bi} 'Rsq-BL_boot.mat'];
    load([root_drIn fn],'F_*','M_*')
    clear fn 
    
    %% 3.1 MvF: R^2 
    %Preallocate output space
    MF_ILDH_p_test = zeros(1,nperms);
    MF_ILVH_p_test = zeros(1,nperms);
    MF_ILPL_p_test = zeros(1,nperms);
    MF_DHVH_p_test = zeros(1,nperms);
    MF_DHPL_p_test = zeros(1,nperms);
    MF_VHPL_p_test = zeros(1,nperms);
    MF_ILDH_pjm = zeros(100,100,nperms);
    MF_ILVH_pjm = zeros(100,100,nperms);
    MF_ILPL_pjm = zeros(100,100,nperms);
    MF_DHVH_pjm = zeros(100,100,nperms);
    MF_DHPL_pjm = zeros(100,100,nperms);
    MF_VHPL_pjm = zeros(100,100,nperms);
    
    for i = 1:nperms %these take ~30-60sec each
        fprintf('Bootstrap stats: Permutation %i of %i\n',i,nperms)
        tstart=tic;
        M_ILDH_boot = get_bootstrapped_sample(M_ILDH, nboot, f_n); 
        M_ILVH_boot = get_bootstrapped_sample(M_ILVH, nboot, f_n); 
        M_ILPL_boot = get_bootstrapped_sample(M_ILPL, nboot, f_n); 
        M_DHVH_boot = get_bootstrapped_sample(M_DHVH, nboot, f_n); 
        M_DHPL_boot = get_bootstrapped_sample(M_DHPL, nboot, f_n); 
        M_VHPL_boot = get_bootstrapped_sample(M_VHPL, nboot, f_n); 
        F_ILDH_boot = get_bootstrapped_sample(F_ILDH, nboot, f_n);
        F_ILVH_boot = get_bootstrapped_sample(F_ILVH, nboot, f_n);
        F_ILPL_boot = get_bootstrapped_sample(F_ILPL, nboot, f_n);
        F_DHVH_boot = get_bootstrapped_sample(F_DHVH, nboot, f_n);
        F_DHPL_boot = get_bootstrapped_sample(F_DHPL, nboot, f_n);
        F_VHPL_boot = get_bootstrapped_sample(F_VHPL, nboot, f_n);
        [MF_ILDH_p_test(i),MF_ILDH_pjm(:,:,i)] = get_direct_prob(M_ILDH_boot,F_ILDH_boot);
        [MF_ILVH_p_test(i),MF_ILVH_pjm(:,:,i)] = get_direct_prob(M_ILVH_boot,F_ILVH_boot);
        [MF_ILPL_p_test(i),MF_ILPL_pjm(:,:,i)] = get_direct_prob(M_ILPL_boot,F_ILPL_boot);
        [MF_DHVH_p_test(i),MF_DHVH_pjm(:,:,i)] = get_direct_prob(M_DHVH_boot,F_DHVH_boot);
        [MF_DHPL_p_test(i),MF_DHPL_pjm(:,:,i)] = get_direct_prob(M_DHPL_boot,F_DHPL_boot);
        [MF_VHPL_p_test(i),MF_VHPL_pjm(:,:,i)] = get_direct_prob(M_VHPL_boot,F_VHPL_boot);
        toc(tstart)
        clear *_boot
    end 
    clear i tstart M_ILDH M_ILVH M_ILPL M_DHVH M_DHPL M_VHPL F_ILDH F_ILVH F_ILPL F_DHVH F_DHPL F_VHPL

    % Put p-value data into tables
      % mean values
    T_MFmean = table(Connection, [mean(MF_ILDH_p_test(1:nperms)) mean(MF_ILVH_p_test(1:nperms)) mean(MF_ILPL_p_test(1:nperms)) mean(MF_DHVH_p_test(1:nperms)) mean(MF_DHPL_p_test(1:nperms)) mean(MF_VHPL_p_test(1:nperms))]');
    T_MFmean.Properties.VariableNames{2} = 'MvF';
      % median values
    T_MFmed = table(Connection, [median(MF_ILDH_p_test(1:nperms)) median(MF_ILVH_p_test(1:nperms)) median(MF_ILPL_p_test(1:nperms)) median(MF_DHVH_p_test(1:nperms)) median(MF_DHPL_p_test(1:nperms)) median(MF_VHPL_p_test(1:nperms))]');
    T_MFmed.Properties.VariableNames{2} = 'MvF';

    % Display table outputs
    fprintf('Male vs. Female: %s Band Power correlation (R^2)\n',Bands{bi})
    fprintf('Mean p-value: %i permutations\n',nperms)
    disp(T_MFmean)
    
    fprintf('Male vs. Female: %s Band Power correlation (R^2)\n',Bands{bi})
    fprintf('Median p-value: %i permutations\n',nperms)
    disp(T_MFmed)
    
    % Save the data
    fprintf('Saving %s Band Power correlation bootstrap statistics: Sex differences..\n',Bands{bi})
    fn = [Bands{bi} 'RsqBootStats-BL-MF.mat'];
    save([root_drIn fn],'T_*','MF_*','-v7.3') 
    disp('Saved!')
    clear fn T_* *_p_test 
    
    %% 3.2 Plot mean R^2 joint-probability matrices: M vs F 
    H1 = figure('units','normalized','outerposition',[0 0 1 1]);
    ax1 = subplot(231); %ILDH
        imagesc(mean(MF_ILDH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Male ILDH'); ylabel('Female ILDH')
        set(gca,'fontsize',14)
        colormap(ax1,jet)
    ax2 = subplot(232); %ILVH
        imagesc(mean(MF_ILVH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Male ILVH'); ylabel('Female ILVH')
        title(sprintf('%s R^2: Joint-probability matrices',Bands{bi}))
        set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.5)
        colormap(ax2,jet)
    ax3 = subplot(233); %ILPL
        imagesc(mean(MF_ILPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Male ILPL'); ylabel('Female ILPL')
        set(gca,'fontsize',14)
        colormap(ax3,jet)
    ax4 = subplot(234); %DHVH
        imagesc(mean(MF_DHVH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Male DHVH'); ylabel('Female DHVH')
        set(gca,'fontsize',14)
        colormap(ax4,jet)
    ax5 = subplot(235); %DHPL
        imagesc(mean(MF_DHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Male DHPL'); ylabel('Female DHPL')
        set(gca,'fontsize',14)
        colormap(ax5,jet)
    ax6 = subplot(236); %VHPL
        imagesc(mean(MF_VHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Male VHPL'); ylabel('Female VHPL')
        set(gca,'fontsize',14)
        colormap(ax6,jet)
    
    % Save figure
    fd = [figdrOut 'BandpowerCorrelations' filesep]; %output directory
        if ~exist(fd,'dir'); mkdir(fd); end    
    fn = [Bands{bi} 'RsqBoot_Mean' num2str(nperms) 'JointProbMatrx_MvF'];
    saveas(H1,[fd fn '.tif'])
    saveas(H1,[fd fn '.fig'])
    close(H1); clear H1 ax*
    fprintf('%s R^2 joint-probability matrix figure saved!\n',Bands{bi})
    clear *_pjm 

    %% 3.3 Females/Hormones: R^2
    clear *_M %not using Metestrus data
    
    % Preallocate output space
     %ILDH
    fDP_ILDH_p_test = zeros(1,nperms); fDE_ILDH_p_test = zeros(1,nperms); fPE_ILDH_p_test = zeros(1,nperms);
    DP_ILDH_pjm = zeros(100,100,nperms); DE_ILDH_pjm = zeros(100,100,nperms); PE_ILDH_pjm = zeros(100,100,nperms);
     %ILVH
    fDP_ILVH_p_test = zeros(1,nperms); fDE_ILVH_p_test = zeros(1,nperms); fPE_ILVH_p_test = zeros(1,nperms);
    DP_ILVH_pjm = zeros(100,100,nperms); DE_ILVH_pjm = zeros(100,100,nperms); PE_ILVH_pjm = zeros(100,100,nperms);
     %ILPL
    fDP_ILPL_p_test = zeros(1,nperms); fDE_ILPL_p_test = zeros(1,nperms); fPE_ILPL_p_test = zeros(1,nperms);
    DP_ILPL_pjm = zeros(100,100,nperms); DE_ILPL_pjm = zeros(100,100,nperms); PE_ILPL_pjm = zeros(100,100,nperms);
     %DHVH
    fDP_DHVH_p_test = zeros(1,nperms); fDE_DHVH_p_test = zeros(1,nperms); fPE_DHVH_p_test = zeros(1,nperms);
    DP_DHVH_pjm = zeros(100,100,nperms); DE_DHVH_pjm = zeros(100,100,nperms); PE_DHVH_pjm = zeros(100,100,nperms);
     %DHPL
    fDP_DHPL_p_test = zeros(1,nperms); fDE_DHPL_p_test = zeros(1,nperms); fPE_DHPL_p_test = zeros(1,nperms);
    DP_DHPL_pjm = zeros(100,100,nperms); DE_DHPL_pjm = zeros(100,100,nperms); PE_DHPL_pjm = zeros(100,100,nperms);
     %VHPL
    fDP_VHPL_p_test = zeros(1,nperms); fDE_VHPL_p_test = zeros(1,nperms); fPE_VHPL_p_test = zeros(1,nperms);
    DP_VHPL_pjm = zeros(100,100,nperms); DE_VHPL_pjm = zeros(100,100,nperms); PE_VHPL_pjm = zeros(100,100,nperms);

    for i = 1:nperms %these take ~13-30sec each loop
        fprintf('Bootstrap stats: Permutation %i of %i\n',i,nperms)
        tstart=tic;
        [fDP_ILDH_p_test(i),fDE_ILDH_p_test(i),fPE_ILDH_p_test(i),DP_ILDH_pjm(:,:,i),DE_ILDH_pjm(:,:,i),PE_ILDH_pjm(:,:,i)] = BootStat_FHorms(F_ILDH_D,F_ILDH_P,F_ILDH_E); %ILDH
        [fDP_ILVH_p_test(i),fDE_ILVH_p_test(i),fPE_ILVH_p_test(i),DP_ILVH_pjm(:,:,i),DE_ILVH_pjm(:,:,i),PE_ILVH_pjm(:,:,i)] = BootStat_FHorms(F_ILVH_D,F_ILVH_P,F_ILVH_E); %ILVH
        [fDP_ILPL_p_test(i),fDE_ILPL_p_test(i),fPE_ILPL_p_test(i),DP_ILPL_pjm(:,:,i),DE_ILPL_pjm(:,:,i),PE_ILPL_pjm(:,:,i)] = BootStat_FHorms(F_ILPL_D,F_ILPL_P,F_ILPL_E); %ILPL
        [fDP_DHVH_p_test(i),fDE_DHVH_p_test(i),fPE_DHVH_p_test(i),DP_DHVH_pjm(:,:,i),DE_DHVH_pjm(:,:,i),PE_DHVH_pjm(:,:,i)] = BootStat_FHorms(F_DHVH_D,F_DHVH_P,F_DHVH_E); %DHVH
        [fDP_DHPL_p_test(i),fDE_DHPL_p_test(i),fPE_DHPL_p_test(i),DP_DHPL_pjm(:,:,i),DE_DHPL_pjm(:,:,i),PE_DHPL_pjm(:,:,i)] = BootStat_FHorms(F_DHPL_D,F_DHPL_P,F_DHPL_E); %DHPL
        [fDP_VHPL_p_test(i),fDE_VHPL_p_test(i),fPE_VHPL_p_test(i),DP_VHPL_pjm(:,:,i),DE_VHPL_pjm(:,:,i),PE_VHPL_pjm(:,:,i)] = BootStat_FHorms(F_VHPL_D,F_VHPL_P,F_VHPL_E); %VHPL
        toc(tstart)
    end
    clear i tstart F_*

    % Put p-value data into tables
      % mean values
    DvPmean = [mean(fDP_ILDH_p_test(1:nperms)) mean(fDP_ILVH_p_test(1:nperms)) mean(fDP_ILPL_p_test(1:nperms)) mean(fDP_DHVH_p_test(1:nperms)) mean(fDP_DHPL_p_test(1:nperms)) mean(fDP_VHPL_p_test(1:nperms))]';
    DvEmean = [mean(fDE_ILDH_p_test(1:nperms)) mean(fDE_ILVH_p_test(1:nperms)) mean(fDE_ILPL_p_test(1:nperms)) mean(fDE_DHVH_p_test(1:nperms)) mean(fDE_DHPL_p_test(1:nperms)) mean(fDE_VHPL_p_test(1:nperms))]';
    PvEmean = [mean(fPE_ILDH_p_test(1:nperms)) mean(fPE_ILVH_p_test(1:nperms)) mean(fPE_ILPL_p_test(1:nperms)) mean(fPE_DHVH_p_test(1:nperms)) mean(fPE_DHPL_p_test(1:nperms)) mean(fPE_VHPL_p_test(1:nperms))]';
    T_meanHormones = table(Connection, DvPmean, DvEmean, PvEmean);
    T_meanHormones.Properties.VariableNames{2} = 'DvP';
    T_meanHormones.Properties.VariableNames{3} = 'DvE';
    T_meanHormones.Properties.VariableNames{4} = 'PvE';
    clear DvPmean DvEmean PvEmean
      % median values
    DvPmed = [median(fDP_ILDH_p_test(1:nperms)) median(fDP_ILVH_p_test(1:nperms)) median(fDP_ILPL_p_test(1:nperms)) median(fDP_DHVH_p_test(1:nperms)) median(fDP_DHPL_p_test) median(fDP_VHPL_p_test(1:nperms))]';
    DvEmed = [median(fDE_ILDH_p_test(1:nperms)) median(fDE_ILVH_p_test(1:nperms)) median(fDE_ILPL_p_test(1:nperms)) median(fDE_DHVH_p_test(1:nperms)) median(fDE_DHPL_p_test) median(fDE_VHPL_p_test(1:nperms))]';
    PvEmed = [median(fPE_ILDH_p_test(1:nperms)) median(fPE_ILVH_p_test(1:nperms)) median(fPE_ILPL_p_test(1:nperms)) median(fPE_DHVH_p_test(1:nperms)) median(fPE_DHPL_p_test) median(fPE_VHPL_p_test(1:nperms))]';
    T_medHormones = table(Connection, DvPmed, DvEmed, PvEmed);
    T_medHormones.Properties.VariableNames{2} = 'DvP';
    T_medHormones.Properties.VariableNames{3} = 'DvE';
    T_medHormones.Properties.VariableNames{4} = 'PvE';
    clear DvPmed DvEmed PvEmed

    % Display table outputs
    disp('  ')
    fprintf('Female Hormones: %s Band Power correlation (R^2)\n',Bands{bi})
    fprintf('Mean p-value: %i permutations\n',nperms)
    disp(T_meanHormones)
    disp('  ')
    fprintf('Female Hormones: %s Band Power correlation (R^2)\n',Bands{bi})
    fprintf('Median p-value: %i permutations\n',nperms)
    disp(T_medHormones)

    % Save the data
    fprintf('Saving %s Band Power correlation bootstrap statistics: Female/Hormones..\n',Bands{bi})
    fn = [Bands{bi} 'RsqBootStats-BL-Hormones.mat'];
    save([root_drIn fn],'T_*','fDP*','fDE*','fPE*','DP_*','DE_*','PE_*','-v7.3') 
    disp('Saved!')
    clear fn T_* *_p_test

    %% 3.4 Plot mean R^2 joint-probability matrices: Females/Hormones
    H2 = figure('units','normalized','outerposition',[0 0 1 1]);
    ax1 = subplot(341); %ILDH - Diestrus v Proestrus
        imagesc(mean(DP_ILDH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
        title('dHPC-mPFCIL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.25);
        colormap(ax1,jet)
    ax2 = subplot(342); %ILVH - Diestrus v Proestrus
        imagesc(mean(DP_ILVH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
        title('vHPC-mPFCIL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.25);
        colormap(ax2,jet)
    ax3 = subplot(343); %PLDH - Diestrus v Proestrus
        imagesc(mean(DP_DHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
        title('dHPC-mPFCPL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.25);
        colormap(ax3,jet)
    ax4 = subplot(344); %PLVH - Diestrus v Proestrus
        imagesc(mean(DP_VHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Diestrus'); ylabel('Proestrus');
        title('vHPC-mPFCPL'); set(gca,'fontsize',14,'TitleFontSizeMultiplier',1.25);
        colormap(ax4,jet)
    ax5 = subplot(345); %ILDH - Diestrus v Estrus
        imagesc(mean(DE_ILDH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Diestrus'); ylabel('Estrus');
        set(gca,'fontsize',14);
        colormap(ax5,jet)
    ax6 = subplot(346); %ILVH - Diestrus v Estrus
        imagesc(mean(DE_ILVH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Diestrus'); ylabel('Estrus');
        set(gca,'fontsize',14);
        colormap(ax6,jet)
    ax7 = subplot(347); %PLDH - Diestrus v Estrus
        imagesc(mean(DE_DHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Diestrus'); ylabel('Estrus');
        set(gca,'fontsize',14);
        colormap(ax7,jet)
    ax8 = subplot(348); %VHPL - Diestrus v Estrus
        imagesc(mean(DE_VHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Diestrus'); ylabel('Estrus');
        set(gca,'fontsize',14);
        colormap(ax8,jet)
    ax9 = subplot(349); %ILDH - Proestrus v Estrus
        imagesc(mean(PE_ILDH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Proestrus'); ylabel('Estrus');
        set(gca,'fontsize',14);
        colormap(ax9,jet)
    ax10 = subplot(3,4,10); %ILVH - Proestrus v Estrus
        imagesc(mean(PE_ILVH_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Proestrus'); ylabel('Estrus');
        set(gca,'fontsize',14);
        colormap(ax10,jet)
    ax11 = subplot(3,4,11); %PLDH - Proestrus v Estrus
        imagesc(mean(PE_DHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Proestrus'); ylabel('Estrus');
        set(gca,'fontsize',14);
        colormap(ax11,jet)
    ax12 = subplot(3,4,12); %VHPL - Proestrus v Estrus
        imagesc(mean(PE_VHPL_pjm(:,:,1:nperms),3)); hold on; plot(x,x,'k','linew',2);
        axis xy square; xlabel('Proestrus'); ylabel('Estrus');
        set(gca,'fontsize',14);
        colormap(ax12,jet) 
    
    % Save figure
    fd = [figdrOut 'BandpowerCorrelations' filesep]; %output directory  
    fn = [Bands{bi} 'RsqBoot_Mean' num2str(nperms) 'JointProbMatrx_Horms'];
    saveas(H2,[fd fn '.tif'])
    saveas(H2,[fd fn '.fig'])
    close(H2); clear H2 ax* fn
    fprintf('%s R^2 joint-probability matrix figure saved!\n',Bands{bi})
    clear *_pjm fD* fP* F* T_* fE* 
    
end %frequency band
clear bi fd

% Clean up workspace
clear x nperms f_n Connection Bands nboot

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%eof
